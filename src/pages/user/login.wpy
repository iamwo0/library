<template>
  <view class="page-user">
    <HeaderContainer></HeaderContainer>
    <view class="status-container">
      <view class="sign-status">
        未登录
      </view>
    </view>
    <view class="sign-form">
      <form bindsubmit="formSubmit" bindreset="formReset">
        <view class="section">
          <input name="input" type="text" maxlength="11" placeholder="请输入用户名" value="{{loginUsername}}" focus="{{focusInputUser}}" @input="loginUsernameInput"/>
        </view>
        <view class="section">
          <input name="input" type="password" placeholder="请输入密码" value="{{loginPwd}}" focus="{{focusInputPwd}}" @input="loginPwdInput"/>
        </view>
        <view class="pwd-forget text-right">
          <small @tap="goto('/pages/password/forget')">忘记密码 ?</small>
        </view>
        <view class="section btn-area">
          <button class="form-btn form-btn-danger" @tap="submitLogin()">登陆</button>
          <button class="form-btn form-btn-primary" @tap="goto('/pages/register/step1')">注册</button>
        </view>
      </form>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import { service } from '../../config.js'
  import base from '../../mixins/base'
  import http from '../../mixins/http'
  import Header from '../../components/header'

  export default class pageUserLogin extends wepy.page {
    mixins = [base, http]
    config = {
      navigationBarTitleText: '登陆',
      enablePullDownRefresh: true,
      navigationBarBackgroundColor: '#005b9e'
    }

    components = {
      HeaderContainer: Header
    }

    data = {
      loginUsername: '',
      loginPwd: '',
      focusInputUser: false,
      focusInputPwd: false
    }

    computed = {
    }

    onShow() {
    }

    onPullDownRefresh() {
      this.initPageData()
    }

    // 初始化页面数据
    initPageData() {
    }

    methods = {
      loginUsernameInput (e) {
        this.loginUsername = e.detail.value
        console.log(this.loginUsername)
      },

      loginPwdInput (e) {
        this.loginPwd = e.detail.value
        console.log(this.loginPwd)
      },

      submitLogin() {
        let that = this
        console.log('will login by user: ', that.loginUsername, '!!!!')
        if (!that.loginUsername.length) {
          that.$showToast('请输入用户名')
          that.focusInputUser = true
          return false
        }
        if (!that.loginPwd.length) {
          that.$showToast('请输入密码')
          that.focusInputPwd = true
          return false
        }
        that.$post({
          url: service.host,
          data: {
            'serverId': {
              'method': 'login'
            },
            'param': {
              'username': that.loginUsername,
              'pwd': that.loginPwd
            }
          }
        }, {
          success: (result) => {
            console.log('handel login response: ', result)
            if (result.msgcode == 0) {
              // 登录成功
              that.$showToast('登录成功', 'success')
              try {
                wx.setStorageSync('token', result.response)
                wx.setStorageSync('role', result.response.role)
                wx.setStorageSync('userName', that.loginUsername)
              } catch (e) {
                console.error(e)
              }
              wx.switchTab({url: '/pages/home'})
            }
          },
          fail: ({code, data}) => {},
          complete: () => { this.loaded = false }
        })
      }
    }

    components = {
    }
  }
</script>

<style lang="less">
  page{
    background: #f9f9f9;
  }
  .page-user{
    @userinfoHeight: 100rpx;
    @userinfoSpace: 8rpx;
    .status-container {
      position: absolute;
      top: 40rpx;
      width: 100%;
      .sign-status {
        height: 200rpx;
        width: 200rpx;
        line-height: 200rpx;
        text-align: center;
        color: #f9f9f9;
        border: 4rpx solid #f9f9f9;
        border-radius: 50%;
        margin: 80rpx auto;
      }
    }
    .sign-form {
      margin: 0rpx 80rpx;
      background: #f9f9f9;
      margin-top: -80rpx;
      border-top-left-radius: 8rpx;
      border-top-right-radius: 8rpx;
      padding: 40rpx;
      .section {
        margin: 80rpx;
        input {
          border-bottom: 1px solid #1E2F99;
        }
        .form-btn {
          margin: 40rpx auto;
          border-radius: 32rpx;
        }
        .form-btn-danger {
          background: red;
          border: 4rpx solid red;
          color: #f9f9f9;
        }
        .form-btn-primary {
          border: 4rpx solid #1E2F99;
        }
      }
      .text-right {
        text-align: right;
        font-size: .6rem;
        color: #1E2F99;
      }
    }
  }
</style>
